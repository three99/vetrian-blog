---
layout: post
author: Dimitris Dovinos
title: "Γιατί επιλέξαμε το συνδρομητικό μοντέλο"
date: 2014-12-30 19:27
comments: true
image: "2.jpg"
---

Το κλασσικό μοντέλο πώλησης λογισμικού στην Ελλάδα (και όχι μόνο) ήταν αυτό που λέμε [shrinkwrapped](http://en.wikipedia.org/wiki/Shrink_wrap_contract) δηλαδή ‘μέσα στη ζελατίνα’. Στην περίπτωση της ‘ζελατίνας’ ο πελάτης αγόραζε μία άδεια χρήσης του λογισμικού και έπαιρνε και ένα cd. Μετά το εγκαθιστούσε στο μηχάνημά του και το χρησιμοποιούσε μόνο σε αυτό. Ο λόγος πού η πώληση γινόταν με αυτό τον τρόπο ήταν καθαρά τεχνικός και είχε πολλά μειονεκτήματα.

Μέχρι και το τα μέσα του 2000 το internet έπαιζε κυρίως μονόδρομο ρόλο. Δηλαδή η πληροφορία έρεε από τα sites προς του αναγνώστες. Για αυτό τον λόγο και τα πρώτα sites με μεγάλο κοινό ήταν τα ειδησιογραφικά. Όπου υπήρχε ανάγκη εισαγωγής δεδομένων συνήθως χρησιμοποιούσαμε desktop εφαρμογές, δηλαδή εφαρμογές που έτρεχαν στο τοπικό μηχάνημα. Οι ιστοσελίδες μπορούσαν να δεχτούν δεδομένα αλλά συχνά η εμπειρία ήταν αργή και δεν είχε την αίσθηση που σου δίνει μια desktop εφαρμογή. Το [gmail](https://mail.google.com/) ή το [hotmail](https://www.hotmail.com/) ήταν παραδείγματα. Παρά το ότι μπορούσες να γράψεις ένα email  μέσα από τον email client του gmail, δεν μπορούσες να ενημερωθείς άμεσα ότι έλαβες email (επρεπε να κάνεις refresh την σελίδα). Έτσι ο περισσότερος κόσμος δεν έγραφε email μέσω του online client αλλά χρησιμοποιούσε ένα desktop client ([outlook](http://products.office.com/en-us/outlook/email-and-calendar-software-microsoft-outlook) στα windows, mail στο Mac). Ακόμα, αν ήθελες λίγο παραπάνω formatting από απλό bold / italic σίγουρα χρειαζόσουν desktop.

Η ανώριμη τεχνολογία των ιστοσελίδων ενίσχυε την ιδέα της ‘ζελατίνας’. Βασικό πρόβλημα της ζελατίνας ήταν ότι για να φτιάξεις ένα bug ή να προσθέσεις λειτουργικότητα έπρεπε να ξαναστείλεις το CD (πόσες φορές έχετε αναβαθμίσει το [Microsoft Office](http://en.wikipedia.org/wiki/History_of_Microsoft_Office)??). Ακόμα έπρεπε ο χρήστης να πληρώσει εφάπαξ το κόστος του software. Αν ένα κομμάτι λογισμικού χρειαζόταν 80,000 ευρώ για να αναπτυχθεί και είχε 500 χρήστες, τότε θα έπρεπε σίγουρα να κοστολογηθεί (80,000 / 500 + % κέρδος ->  200 Ευρώ) αρχικά τόσο όσο να γίνει η απόσβεση από μια πώληση σε κάθε χρήστη. Το ποσό από μόνο του απωθούσε τον χρήστη αφού ο προγραμματιστής του ζητούσε να επενδύσει 200 Ευρώ σε κάτι που μπορεί να μην του κάνει ή να του κάνει αλλά να έχει πολύ χαμηλή ποιότητα κλπ κλπ.

##Welcome to Software as a Service ([SaaS](http://en.wikipedia.org/wiki/Software_as_a_service))#

Όμως για καλή μας τύχη η τεχνολογία βελτιώθηκε και ο κόσμος εξοικειώθηκε με την ανταλλαγή πληροφορίας μέσω internet. Ήρθε το [facebook](https://www.facebook.com/), το [LinkedIn](https://www.linkedin.com/), ο πάρα πολύ καλός client του gmail καί άλλες υπηρεσίες που σιγά - σιγά μετέτρεψαν ακόμα και ανθρώπους που ποτέ δεν χρησιμοποίησαν computer (η γενιά των γονιών μας) σε καταναλωτές τεχνολογίας - πληροφορίας.

Από την στιγμή που οι σελίδες μπορούσαν να καλύψουν πιο σύνθετες ανάγκες άρχισαν να μοιάζουν όλο και περισσότερο με desktop εφαρμογές (αυτό το κείμενο το γράφω σε [google docs](https://docs.google.com/) ενώ πριν 10 χρόνια θα χρησιμοποιούσα MS word) και μπορούσαν να καλύψουν όλη την λειτουργικότητα μιας desktop εφαρμογής. Οι εφαρμογές που τρέχουν σας ιστοσελίδες έχουν μερικά πλεονεκτήματα που τις κάνουν κάτι πολύ περισσότερο από αντικαταστάτες των desktop εφαρμογών· τις κατατάσσουν σε εντελώς διαφορετική κατηγορία. Ορίστε οι λόγοι:

1. Στις online εφαρμογές μπορεί να γίνει αλλαγή στον κώδικα καθώς η εφαρμογή τρέχει. Τέρμα το update με CD. Αν υπάρχει λάθος ή θέλουμε να κάνουμε μιά αλλαγή μπορούμε να την κάνουμε χωρίς να διακόψουμε τον χρήστη. Για την ακρίβεια, ο χρήστης ‘δεν θα πάρει είδηση’.
2. Οι online εφαρμογές είναι προσβάσιμες από παντού και από οποιδήποτε λειτουργικό (windows, OSX, Android, iOS κλπ.). Μια ιστοσελίδα μπορείς να την ανοίξεις από το σπίτι, από το γραφείο, από το κινητό ή από την άλλη άκρη του πλανήτη. Δεν έχει σημασία αν έχεις το δικό σου laptop μαζί σου. Φτάνει να θυμάσαι το password και να έχεις πρόσβαση στο internet.
3. Μπορούν να κοστολογηθούν σε πολύ μικρά κομμάτια ώστε ο χρήστης να αγοράσει ότι χρειάζεται για όσο το χρειάζεται. Αν θέλω να προσφέρω μια υπηρεσία και στο μπακάλικο αλλά και στην πολυεθνική τότε μπορώ να δώσω περιορισμένη λειτουργικότητα στον μπακάλη (με περιορισμένο κόστος) και όλη την λειτουργικότητα στην πολυεθνική (με full κόστος). Ακόμα μπορώ να τον χρεώσω ανά μήνα, ώστε όταν ο χρήστης δεν με χρειάζεται να μπορεί να φύγει.
4. Πρόσβαση σε απεριόριστη πληροφορία. Μια διαδικτυακή εφαρμογή μπορεί ‘απο πίσω΄ να έχει βάσεις δεδομένων ή εργαλεία αναζήτησης που σε desktop εφαρμογή θα ήταν δύσκολο να εγκατασταθούν ή να συντηρηθούν.
